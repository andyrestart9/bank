# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        # https://hub.docker.com/_/postgres see Environment Variables
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: bank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.3"

      # uname 是类 Unix 系统里用来查看系统信息的命令；
      # 常用选项：
      # uname     → 打印内核名称 (Linux)
      # uname -a    → 打印所有可用信息
      # uname -m    → 打印 “machine hardware name”，也就是 CPU 架构
      - name: Show runner arch
        run: uname -m

      # https://github.com/golang-migrate/migrate?tab=readme-ov-file#cli-usage
      # https://github.com/golang-migrate/migrate/tree/master/cmd/migrate
      # 先下載看看他的檔名是什麼，再把它搬到 /usr/local/bin/
      # 因為 runner 是 amd64 ，所以需要下載 linux amd64 的版本
      # ---
      # 把它移到 /usr/local/bin/（需要 sudo mv）有两个目的：
      # /usr/local/bin 已在 GitHub Runner 的全局 $PATH 里，后续任何 step 直接敲 migrate … 就能找到；不用再写 ./migrate 或修改 PATH。
      # workflow 后续 step 可能 cd 到别的目录；把可执行文件放进系统路径可避免“找不到命令”的问题。
      # ---
      # /usr/local/bin 和移動到 /usr/bin 的差別
      # /usr/bin 系统发行包放置的位置，受系统软件包管理器掌控。
      # /usr/local/bin 给使用者自己安装的额外工具预留；不被包管理器覆盖。
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.3/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateup

      - name: Test
        run: make test
